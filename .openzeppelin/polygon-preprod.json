{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x920Da8a495133Ea6C23E80c760Eb8E5f32620ea1",
      "txHash": "0x507866afe605eceb8197bbe839806d0142f43738217f64ee49d394ee266dea9b",
      "kind": "uups"
    },
    {
      "address": "0xA502b51aad6D8DecFb9f05757ACf3012499B6494",
      "txHash": "0x611d148c0124eedc15f78a9d548c7f1e68021f3fa0835e8cbce605e099fe5654",
      "kind": "uups"
    },
    {
      "address": "0x2FeeFB435Cc31493Da0950b1C6deD8c7E536c434",
      "txHash": "0xdf29a2ae612d198d60f7c1c64cbda3cdd3b18d30e080958ac5caa7723d547e58",
      "kind": "uups"
    },
    {
      "address": "0x3EB7De768dE2513041482cE3d5798D5B675660da",
      "txHash": "0x66d0e5a3a00d03ef0dcffd2336633f9ae164373d7303a7a5c9eda96c1dd30a80",
      "kind": "uups"
    },
    {
      "address": "0xAa59C3708d9D5e09c0C85558a170eA846712b1c4",
      "txHash": "0x0bca5383d0adedddfebf363f0666da8dba28a6255c0367bd80884024189e1444",
      "kind": "uups"
    },
    {
      "address": "0xaCa6bcfaAF7d65078D454cf7076978e30e4744E9",
      "txHash": "0x9b94134f510e1177cac9d0cf30ca32b6045c6319df8063a12b153990f056e360",
      "kind": "uups"
    }
  ],
  "impls": {
    "384026fc1bee0216ba9b8d333eb3454565753c562f2e9a2b3ada7a97c8c6b50c": {
      "address": "0x12E4bF7716F4B3374920AC0824f8ab1582e407C1",
      "txHash": "0x6b832ec01045a0c99b2ecd3036de2cff9b25a0935da3e9c124688c18f62c14a5",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_permissions",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_userDefinedValueType(Mask)12268)",
            "contract": "PermissionManager",
            "src": "contracts/permissions/PermissionManager.sol:26"
          },
          {
            "label": "_restrictions",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_userDefinedValueType(Mask)12268))",
            "contract": "PermissionManager",
            "src": "contracts/permissions/PermissionManager.sol:27"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint8,t_userDefinedValueType(Mask)12268)",
            "contract": "PermissionManager",
            "src": "contracts/permissions/PermissionManager.sol:28"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)501_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_mapping(t_bytes4,t_userDefinedValueType(Mask)12268))": {
            "label": "mapping(address => mapping(bytes4 => Masks.Mask))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_userDefinedValueType(Mask)12268)": {
            "label": "mapping(address => Masks.Mask)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_userDefinedValueType(Mask)12268)": {
            "label": "mapping(bytes4 => Masks.Mask)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_userDefinedValueType(Mask)12268)": {
            "label": "mapping(uint8 => Masks.Mask)",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_userDefinedValueType(Mask)12268": {
            "label": "Masks.Mask",
            "numberOfBytes": "32",
            "underlying": "t_bytes32"
          },
          "t_bytes32": {
            "label": "bytes32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4ebc19313b78b99792398d8c62edb8a1df5fa093f397ff3ad4b45800c72f3808": {
      "address": "0xA23fDF85b94030C20704DbCaC91f2bbb8B8aF2C8",
      "txHash": "0x6a1ba7b174716b73213fac508d547bea1e073c7c4c7a8cd3258eb0a347681669",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "details",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_bytes32,t_struct(Details)11250_storage)",
            "contract": "Redemption",
            "src": "contracts/token/Redemption.sol:42"
          },
          {
            "label": "minimum",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_contract(IERC20)3644,t_uint256)",
            "contract": "Redemption",
            "src": "contracts/token/Redemption.sol:43"
          },
          {
            "label": "_outputs",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_contract(IERC20)3644,t_struct(AddressSet)9962_storage)",
            "contract": "Redemption",
            "src": "contracts/token/Redemption.sol:44"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)501_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3644": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(Status)11244": {
            "label": "enum Redemption.Status",
            "members": [
              "NULL",
              "PENDING",
              "EXECUTED",
              "CANCELED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(Details)11250_storage)": {
            "label": "mapping(bytes32 => struct Redemption.Details)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20)3644,t_struct(AddressSet)9962_storage)": {
            "label": "mapping(contract IERC20 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20)3644,t_uint256)": {
            "label": "mapping(contract IERC20 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)9962_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9647_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Details)11250_storage": {
            "label": "struct Redemption.Details",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)11244",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "deadline",
                "type": "t_uint48",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)9647_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fae95c28c9ee605a78c819dfb2b798d3c07b7cdfe5e0a3e9680876a87d70449c": {
      "address": "0x09B69B30Fa72192D191098292A6a339F14191359",
      "txHash": "0x35d9c01bd224cf99833f4cace72f4a5234bd2ba5b74bb6d0f4e0e5c2f9ad739a",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "m_decimals",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Token",
            "src": "contracts/token/Token.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)254_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)104_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)48_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)190_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)17_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)209_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5ad7ba66d0c21f549f77fe3d91b367324788dbc00a266eafe27d97ea3bc228a2": {
      "address": "0xBED68a251e1878919F9D8288a6C3C92e5c50bfC6",
      "txHash": "0x0c152b8a9e92654c011e5ba9647b781298efe6029e43e1da2155259f5869b084",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20Metadata)3670",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:26"
          },
          {
            "label": "decimals",
            "offset": 20,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:28"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:29"
          },
          {
            "label": "_history",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Trace208)8598_storage",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:30"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)501_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Checkpoint208)8603_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Metadata)3670": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint208)8603_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint208",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace208)8598_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)8603_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint208": {
            "label": "uint208",
            "numberOfBytes": "26"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
