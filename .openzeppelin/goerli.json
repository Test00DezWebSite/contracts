{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xCCDeB536f6FB8bB1b827F6Bc0f42423C479D314B",
      "txHash": "0xe4236c90b89b3b0bac0e6769f61a67648cb1c31270d52b4b92fc2e05251ab7a8",
      "kind": "uups"
    },
    {
      "address": "0xB3D0AdBAf785A71583038b411c4E3c0aA446Cbc4",
      "txHash": "0xbfb459357511493a04daba767b6b743685d7c17aa3f92de0482b2feb2aacebe5",
      "kind": "uups"
    },
    {
      "address": "0x34f2D08d1521738844A04AB207d2dB95B0657Cb3",
      "txHash": "0x445b52824e110e81b75e000c073ddb49b87f1847b1d59f202fc8e65fce5c4230",
      "kind": "uups"
    },
    {
      "address": "0x7b4965BB43D8FAbE8dA2015963f63A87eE1c1565",
      "txHash": "0xd2a5f3529f2265cd6231105e13bbd57d2e4b3744df0088feb8abe5a485d76114",
      "kind": "uups"
    },
    {
      "address": "0xd9c05989D326c67388A0721DEB1C12eE1D911B11",
      "txHash": "0x58e4a07b9f8f4aacac9046c3c61c601cc452d4d87c8d134fbf99540e96b8ace2",
      "kind": "uups"
    },
    {
      "address": "0x603A11eBCa7a5839F6c767Cb054BEb214aCd4EDB",
      "txHash": "0x97d4b1bb84e5c67a324eafb165cefa3ee038c00bb81dc7efe01875851f0104c4",
      "kind": "uups"
    }
  ],
  "impls": {
    "cf042663c6738b75fee196ac23c5982ae51cae024c46f06d056042b30d7c2902": {
      "address": "0x4efDe7d7237D08567cBFd79a740C23F6A2414e9d",
      "txHash": "0x7f0a1b5855f89270d8b75d4ec0a95a20010c41e1e1c4787be82160f40f4aef3a",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_permissions",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_userDefinedValueType(Mask)12418)",
            "contract": "PermissionManager",
            "src": "contracts/permissions/PermissionManager.sol:26"
          },
          {
            "label": "_restrictions",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_userDefinedValueType(Mask)12418))",
            "contract": "PermissionManager",
            "src": "contracts/permissions/PermissionManager.sol:27"
          },
          {
            "label": "_admin",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint8,t_userDefinedValueType(Mask)12418)",
            "contract": "PermissionManager",
            "src": "contracts/permissions/PermissionManager.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_mapping(t_bytes4,t_userDefinedValueType(Mask)12418))": {
            "label": "mapping(address => mapping(bytes4 => Masks.Mask))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_userDefinedValueType(Mask)12418)": {
            "label": "mapping(address => Masks.Mask)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_userDefinedValueType(Mask)12418)": {
            "label": "mapping(bytes4 => Masks.Mask)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint8,t_userDefinedValueType(Mask)12418)": {
            "label": "mapping(uint8 => Masks.Mask)",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_userDefinedValueType(Mask)12418": {
            "label": "Masks.Mask",
            "numberOfBytes": "32",
            "underlying": "t_bytes32"
          },
          "t_bytes32": {
            "label": "bytes32"
          }
        }
      }
    },
    "0562b9bf7d6054f962a75c0b8b66a9c0c198daaa6eff8b18b66c21f3b9b0a6d3": {
      "address": "0x2D382aB7744009619bD0eD0f8bEf811Dfae6AD36",
      "txHash": "0xb2ee013cf2c04ca68bd67c0af1c618735ad2cb6c57191c1783643763f0668744",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "details",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_struct(Details)11407_storage)",
            "contract": "Redemption",
            "src": "contracts/token/Redemption.sol:37"
          },
          {
            "label": "_outputs",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_contract(IERC20)4965,t_struct(AddressSet)10193_storage)",
            "contract": "Redemption",
            "src": "contracts/token/Redemption.sol:38"
          }
        ],
        "types": {
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4965": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_enum(Status)11401": {
            "label": "enum Redemption.Status",
            "members": [
              "NULL",
              "PENDING",
              "EXECUTED",
              "CANCELED"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(Details)11407_storage)": {
            "label": "mapping(bytes32 => struct Redemption.Details)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_contract(IERC20)4965,t_struct(AddressSet)10193_storage)": {
            "label": "mapping(contract IERC20 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)10193_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)9878_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Details)11407_storage": {
            "label": "struct Redemption.Details",
            "members": [
              {
                "label": "status",
                "type": "t_enum(Status)11401",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "deadline",
                "type": "t_uint48",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)9878_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3d138540cae02e346c4d6c209d883ffcd1f5c6f8f7d58787e7e18108fa783eea": {
      "address": "0x8C10CA45a9e94bb68829240dCE667E2e7115d374",
      "txHash": "0x79ba03b099656cade75718ce89f1e2b2b7b224041b799cbefe7cd7dea616e4a5",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PausableUpgradeable.sol:48"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(Counter)1746_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "254",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)1746_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1746_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0176d587867cc9abfc4a627e0fb3f6f258234240f1ae654df23324ddc1fbcabd": {
      "address": "0xBf08770dA5b8cEf9a743d93FD26c28663D0f033C",
      "txHash": "0xbab1e1d11a7154e4994bd50e6186a25153ca4c70fa9ac329e38c1e298ffd0d4b",
      "layout": {
        "solcVersion": "0.8.21",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "token",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IERC20Metadata)4990",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:26"
          },
          {
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:29"
          },
          {
            "label": "_history",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Trace224)6273_storage",
            "contract": "Oracle",
            "src": "contracts/oracle/Oracle.sol:30"
          }
        ],
        "types": {
          "t_array(t_struct(Checkpoint224)6278_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint224[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Metadata)4990": {
            "label": "contract IERC20Metadata",
            "numberOfBytes": "20"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint224)6278_storage": {
            "label": "struct Checkpoints.Checkpoint224",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace224)6273_storage": {
            "label": "struct Checkpoints.Trace224",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint224)6278_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
